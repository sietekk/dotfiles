- defaults:
    link:
      relink: true
      create: true
      force: true

- clean: ['~', '~/.config']

- link:
    ~/.dotfiles:
      path: ''
    ~/.gitconfig:
      path: gitconfig
    ~/.gitignore_global:
      path: gitignore_global
    ~/.hgrc:
      path: hgrc
    ~/.hgignore_global:
      path: hgignore_global
    ~/.screenrc:
      path: screenrc
    ~/.vim:
      path: vim/
    ~/.vimrc:
      path: vim/vimrc
    ~/.profile:
      path: bash/profile
    ~/.bashrc:
      path: bash/bashrc
    ~/.bash_profile:
      path: bash/bash_profile
    ~/.bash_logout:
      path: bash/bash_logout

- shell:
  - description: Build vimproc
    command: |
      if [ ! -d ~/.vim/bundle/vimproc.vim ]; then
        exit 0
      fi
      cd ~/.vim/bundle/vimproc.vim
      eval "make"

- shell:
  - description: Build YouCompleteMe
    command: |
      if [ ! -d ~/.vim/bundle/YouCompleteMe ] || \
          [ -f ~/.vim/bundle/YouCompleteMe/third_party/ycmd/ycm_core.so ]; then
          exit 0
      fi
      echo -n "Build YouCompleteMe? (May require additional packages) [y|N] " > /dev/tty
      read choice < /dev/tty
      case "$choice" in
          y|Y )
              break;;
          * )
              exit 0;;
      esac
      os=$(uname)
      if echo "${os}" | grep -iq "darwin"; then
          echo "Installing cmake with brew." > /dev/tty
          brew install cmake > /dev/tty 2>&1
      elif echo "${os}" | grep -iq "linux"; then
          echo "Installing required packages: build-essential cmake python-dev" > /dev/tty
              sudo apt-get install build-essential cmake python-dev < /dev/tty > /dev/tty 2>&1
      else
          echo "Unknown OS: ${os}. Attempting to build anyway." > /dev/tty
      fi
      if [ $? -ne 0 ]; then
          exit 1
      fi
      echo -n "Enter build options (default: --clang-completer --gocode-completer). Give a space for no args.\n> " > /dev/tty
      read options < /dev/tty
      if [ -n "${options}" ]; then
          options="--clang-completer --gocode-completer"
      fi
      cd ~/.vim/bundle/YouCompleteMe
      eval "./install.py ${options} > /dev/tty 2>&1"
  - description: Create VIM backup, swap, and undo directories
    command: |
      mkdir -p ~/.vim/backup_files/
      mkdir -p ~/.vim/swap_files/
      mkdir -p ~/.vim/undo_files/
  - description: Create development directory
    command: mkdir -p ~/dev
  - description: Installing submodules
    command: git submodule update --init --recursive

